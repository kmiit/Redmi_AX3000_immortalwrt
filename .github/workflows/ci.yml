name: CI

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
            g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
            libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
            ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
            python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
            upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

      - name: Checkout
        uses: actions/checkout@v3

      - name: Hook the openwrt_core URL for opkg
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          REPO="${GITHUB_REPOSITORY#*/}"
          TIME="$(curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | jq -r .created_at)"

          echo "ci-$(date -d "${TIME}" -u +'%Y%m%d-%H%M%S')-${GITHUB_SHA:0:8}" >version
          sed -i "s|%U/targets/%S/packages|https://${OWNER}.github.io/${REPO}/${GITHUB_REF_NAME}/%R|" include/feeds.mk

      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure
        run: |
          cat <<EOF | sed -E 's/^  //' >.config
            CONFIG_TARGET_qualcommax=y
            CONFIG_TARGET_qualcommax_ipq50xx=y

            CONFIG_IB=y
            # CONFIG_IB_STANDALONE is not set
            CONFIG_SDK=y
            CONFIG_MAKE_TOOLCHAIN=y

            CONFIG_ALL_NONSHARED=y
            CONFIG_REPRODUCIBLE_DEBUG_INFO=y

            CONFIG_PACKAGE_luci=y
          EOF
          make defconfig

      - name: Download
        run: |
          make -j16 download

      - name: Build tools
        run: |
          make -j$(nproc) tools/install

      - name: Build toolchain
        run: |
          make -j$(nproc) toolchain/install

      - name: Build all
        run: |
          make -j$(nproc) IGNORE_ERRORS=1

      - name: Upload bin to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bin-qualcommax-ipq50xx
          path: bin/targets/qualcommax/ipq50xx/*

      - name: Upload dl to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dl
          path: dl/*

  release:
    needs: [ build ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download dl from artifacts
        uses: actions/download-artifact@v3
        with:
          name: dl
          path: dl/

      - name: Download bin from artifacts
        uses: actions/download-artifact@v3
        with:
          name: bin-qualcommax-ipq50xx
          path: bin/targets/qualcommax/ipq50xx/

      - name: Generate release informations
        run: |
          TIME="$(curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | jq -r .created_at)"

          TAG="ci-${GITHUB_REF_NAME}-$(date -d "${TIME}" -u +'%Y%m%d-%H%M%S-%Z')"
          echo "TAG=$TAG" >>$GITHUB_ENV

          cat <<EOF | sed -E 's/^  //' >Release.md
            CI ${GITHUB_REF_NAME} $(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')

            # ${GITHUB_REF_NAME}

            Build time: \`$(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')\`
            Release version: ${TAG}

            ## Sources
            $(cat bin/targets/qualcommax/ipq50xx/feeds.buildinfo | awk -F'[ ^]' '{printf "%s: `%s`\n", $2, $4}')

            ## SHA256
            $(cat bin/targets/qualcommax/ipq50xx/sha256sums | awk '{printf "%s: `%s`\n", $2, $1}' | sed -E 's/^\*//')
          EOF

          echo "NAME=$(head --line=1 Release.md)" >>$GITHUB_ENV
          tail --line=+2 Release.md >Body.md

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG }}
          target_commitish: ${{ github.sha }}
          name: ${{ env.NAME }}
          body_path: Body.md
          files: |
            bin/targets/qualcommax/ipq50xx/sha256sums
            bin/targets/qualcommax/ipq50xx/*.*